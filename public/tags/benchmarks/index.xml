<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Benchmarks on Rico&#39;s Blog</title>
    <link>http://localhost:1313/tags/benchmarks/</link>
    <description>Recent content in Benchmarks on Rico&#39;s Blog</description>
    <generator>Hugo -- 0.128.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Mar 2012 13:20:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/benchmarks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>To SSD or Not To SSD</title>
      <link>http://localhost:1313/post/20120318-to-ssd-or-not-to-ssd/</link>
      <pubDate>Sun, 18 Mar 2012 13:20:23 +0200</pubDate>
      <guid>http://localhost:1313/post/20120318-to-ssd-or-not-to-ssd/</guid>
      <description>My MacBookPro is quite old now :
MacBook Pro 5.1 (Late 2008) Core2Duo 2.66Ghz Under Lion, MBP appears to be sometime laggy even if I already updated it :
Replaced original 4Gb RAM to 8Gb DDR3 (GSkill PC8500 SQ (1066 MHz), 7-7-7-20) Replaced original Hitachi 320GB/5400 RPM by a 500Gb WesternDigital Black Black 7200RPM (WD5000BEKT-75KA9T0) I run GeekBench 2.2.7 and give me a bench result of 3752 :
Benchmark Summary Integer Score 3123 | Floating Point Score 5493 | Memory Score 2629 | Stream Score 2110 | Geekbench Score 3752 | System Information Operating System Mac OS X 10.</description>
    </item>
    <item>
      <title>Apple JDK and OpenJDK - Back to Benchs</title>
      <link>http://localhost:1313/post/20110416-apple-jdk-and-openjdk-back-to-benchs/</link>
      <pubDate>Sat, 16 Apr 2011 13:20:23 +0200</pubDate>
      <guid>http://localhost:1313/post/20110416-apple-jdk-and-openjdk-back-to-benchs/</guid>
      <description>It’s good to see works in progress for Aqua/Cocoa - AWT ports but what about JVM performances ?
Test vms I selected 4 VMs to be tested
Apple Java 1.6.0_22 - java version &amp;quot;1.6.0_22&amp;quot; Java(TM) SE Runtime Environment (build 1.6.0_22-b04-314-10M3406a) Java HotSpot(TM) 64-Bit Server VM (build 17.1-b03-314, mixed mode)
Apple Java 1.6.0_24 - java version &amp;quot;1.6.0_24&amp;quot; Java(TM) SE Runtime Environment (build 1.6.0_24-b07-348-10M3406a) Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02-348, mixed mode)</description>
    </item>
    <item>
      <title>Apple JDK and OpenJDK – Core2Duo vs I7</title>
      <link>http://localhost:1313/post/20110413-apple-jdk-with-openjdkcore2duo-vs-i7/</link>
      <pubDate>Wed, 13 Apr 2011 13:20:23 +0200</pubDate>
      <guid>http://localhost:1313/post/20110413-apple-jdk-with-openjdkcore2duo-vs-i7/</guid>
      <description>Previously I did benchmark of Apple VMs and OpenJDK 6 and I wanted to see how all of the JVMs available today on our Mac on two systems, an old Core2Duo and a newer i7. And also see how they perform 32 / 64 bits kernel mode.
So I redo full dacapo bench suite to include OpenJDK 6, and we have now 5 VMs (3 Java 6 and 2 Java 7) :</description>
    </item>
    <item>
      <title>OpenJDK 1.7 for OSX Benchs</title>
      <link>http://localhost:1313/post/20101204-openjdk-1.7-for-osx-benchs/</link>
      <pubDate>Sat, 04 Dec 2010 13:20:23 +0200</pubDate>
      <guid>http://localhost:1313/post/20101204-openjdk-1.7-for-osx-benchs/</guid>
      <description>After building and packaging OpenJDK 1.7 for OS/X, I wanted to see how performed new VMs.
Test vms Recents OpenJDK 1.7 32 and 64bits where used :
openjdk version &amp;quot;1.7.0-internal&amp;quot; OpenJDK Runtime Environment (build 1.7.0-internal-henri_2010_12_01_00_46-b00) OpenJDK Server VM (build 20.0-b02, mixed mode)
openjdk version &amp;quot;1.7.0-internal&amp;quot; OpenJDK Runtime Environment (build 1.7.0-internal-henri_2010_12_01_00_49-b00) OpenJDK 64-Bit Server VM (build 20.0-b02, mixed mode)
Test system My test system is an Apple Mac Book Pro (MacBookPro5,1) with Intel Core 2 Duo 2.</description>
    </item>
  </channel>
</rss>
